In this example, the read_file() function uses a generator to read the file large_file.txt one line at a time, and yield each line to the caller. The strip() method is called on each line to remove any leading or trailing white space.
The for loop at the bottom of the example iterates over the generator, which generates each line of the file one by one. This allows you to process each line without loading the entire file into memory at once, making it much more memory-efficient.
Generators are also useful when you need to generate an infinite sequence of items, such as an endless stream of random numbers or a sequence of prime numbers. By generating items on the fly, a generator can continue to produce items indefinitely without ever running out of memory or crashing the program.
